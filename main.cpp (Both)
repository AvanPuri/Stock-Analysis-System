#include <iostream>
#include <string>
#include "SignUp.h"
#include "LogIn.h"
#include "CurlWrap.h"
#include "StockAnalysis.h"
#include "DataBase.h"
#include "GetStockData.h"
#include <fstream>


using namespace std;
StockAnalysis S;

struct BandEdate {
    // Struct to hold the beginning and end date of the stock
    struct tm begin {};
    struct tm end {};
};

string StockInfo();
bool UserLogIn();
bool Register();
void Menu();



void NewTicker() {
    // Function to get stock information from user
    string URL = StockInfo();
    cout << URL << endl;

    
}
bool CheckTicker(const string& ticker) {
    // Function to check if the ticker is valid
    if (ticker.empty()) {
        return false;
    }
    for (char c : ticker) {
        if (!isupper(c)) {
            return false;
        }
    }
    return true;
}


string StockInfo() {

    BandEdate T;
    CurlWrap C;
    string interval;
    string ticker;
    // do while loop to get the ticker from the user
    do {
        cout << "Enter ticker of stock you would like to find information on (E.g. AAPL): " << endl;
        cin >> ticker;
        if (!CheckTicker(ticker)) {
            cout << "Invalid ticker. Please try again. Make sure everything you enters is in capitals and all letters" << endl;
        }
    } while (!CheckTicker(ticker));
    // Get the beginning and end date of the stock
    cout << "Enter the beginning year: " << endl;
    cin >> T.begin.tm_year;
    T.begin.tm_year -= 1900;

    cout << "Enter the beginning month (1-12): " << endl;
    cin >> T.begin.tm_mon;
    T.begin.tm_mon--;

    cout << "Enter the beginning day (1-31): " << endl;
    cin >> T.begin.tm_mday;

    cout << "Enter the end year: " << endl;
    cin >> T.end.tm_year;
    T.end.tm_year -= 1900;

    cout << "Enter the end month (1-12): " << endl;
    cin >> T.end.tm_mon;
    T.end.tm_mon--;

    cout << "Enter the end day (1-31): " << endl;
    cin >> T.end.tm_mday;
    // Get the interval of the stock
    cout << "Enter the interval for the stock (E.g. 1d): " << endl;
    cin >> interval;
    // Convert the beginning and end date to time_t
    time_t starttime = mktime(&T.begin);


    time_t endtime = mktime(&T.end);



    // Convert the time_t to system_clock::time_point
    system_clock::time_point start_date = system_clock::from_time_t(starttime);
    system_clock::time_point end_date = system_clock::from_time_t(endtime);
    // Return the URL
    return C.URL(ticker, start_date, end_date, interval);


}
void AnalyzeData1() {

    // Analyze the stock data
    S.AnalyzeData();
    S.OpenFile();
    S.Parsedata();
    S.Average();
    S.HighValue();
    S.LowValue();
    S.Volatility();
    S.PrintData();



}

void Savetofile() {

    // Save the stock data to a file
    
    S.Dataintofile();
}

bool Register() {
    SignUp signUp;
    DataBase User;
    string username, password;
    bool LoggedIn = false;
    // Register the user
    while (LoggedIn == false) {
        cout << "Please enter a username : ";
        cin >> username;
        cout << "______________________" << endl;
        if (!signUp.AuthenticateUsername(username)) {
            cout << "Username is taken, please try again." << endl;
            LoggedIn = false;
            return LoggedIn;
        }
        else {
            signUp.Setusername(username);
        }
        cout << "Password must be at least 10 characters." << endl;
        cout << "Password must contain a number." << endl;
        cout << "Please enter a password : ";
        cin >> password;
        cout << "______________________" << endl;

        bool Length = false;
        bool HasNum = false;

        // Check if the password is valid
        while (!Length || !HasNum) {
            if (password.length() >= 10) {
                Length = true;
            }
            else {
                cout << "Password must be at least 10 characters." << endl;
            }

            for (int i = 0; i < password.length(); i++) {
                if (isdigit(password[i])) {
                    HasNum = true;
                }
                else {
                    HasNum = false;
                }
            }
            if (!HasNum) {
                cout << "Password must contain a number (0-9)." << endl;
            }

            if (!Length || !HasNum) {
                cout << "Please enter a password : ";
                cin >> password;
            }
            // Set the password
            cout << endl;
            cout << "**********************" << endl;
            cout << "Password accepted. Account for > " << signUp.Getusername() << " < created successfully." << endl;
            cout << "**********************" << endl << endl;        signUp.Setpassword(password);
            User.AddUserInfo(username, password);
            LoggedIn = false;
            return LoggedIn;
        }
    }
    return LoggedIn;
}



void Menu() {
    char choice;
    bool LoggedIn = false;
    bool exit = false;
    // Main menu for the program
    do {
        cout << "Please select an option : " << endl;
        cout << "1. Login" << endl;
        cout << "2. Signup" << endl;
        cout << "3. Exit program" << endl;
        cout << "______________________" << endl;
        cout << "Enter number : ";
        cin >> choice;

        switch (choice) {
        case '1':
            // Log the user in
            LoggedIn = UserLogIn();
            break;

        case '2':
            // Register the user
            Register();
            break;

        case '3':
            // Exit the program
            cout << "Thank you for using the program. Goodbye!" << endl;
            exit = true;
            break;

        default:
            // Invalid choice
            cout << "Invalid choice, please try again." << endl;
            break;
        }

        if (LoggedIn) {
            do {
                // Menu for the user
                cout << "Please select an option for stock analysis : " << endl;
                cout << "1. Choose a new stock ticker : " << endl;
                cout << "2. Analyze stock file : " << endl;
                cout << "3. Save info into file : " << endl;
                cout << "4. Logout." << endl;
                cout << "______________________" << endl;
                cout << "Enter number : ";
                cin >> choice;

                switch (choice) {
                case '1':
                    // Get a new stock ticker and enter new information
                    NewTicker();
                    break;
                case '2':
                    // Analyze the stock data
                    AnalyzeData1();
                    break;
                case '3':
                    // Save the stock data to a file
                    Savetofile();
                   	break;
                case '4':
                    // Log the user out
                    cout << "**********************" << endl;
                    cout << "Successfully logged out." << endl;
                    cout << "**********************" << endl;
                    LoggedIn = false;
                    break;
                default:
                    // Invalid choice
                    cout << "Invalid entry." << endl;
                    break;
                }
            } while (LoggedIn);
        }

    } while (exit == false);
}

int main() {
    // Main function to run the program
    Menu();

    return 0;
}

